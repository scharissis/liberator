{
  "name": "html-webpack-plugin",
  "version": "1.1.0",
  "description": "Simplifies creation of HTML files to serve your webpack bundles",
  "main": "index.js",
  "scripts": {
    "test": "jshint *.js spec && node_modules/.bin/jasmine-node --captureExceptions spec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ampedandwired/html-webpack-plugin.git"
  },
  "keywords": [
    "webpack",
    "plugin",
    "html",
    "generate"
  ],
  "author": {
    "name": "Charles Blaxland",
    "email": "charles.blaxland@gmail.com",
    "url": "https://github.com/ampedandwired"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/ampedandwired/html-webpack-plugin/issues"
  },
  "homepage": "https://github.com/ampedandwired/html-webpack-plugin",
  "devDependencies": {
    "jasmine-node": "^1.14.5",
    "jshint": "^2.5.2",
    "rimraf": "^2.2.8",
    "webpack": "^1.3.3-beta1"
  },
  "dependencies": {
    "blueimp-tmpl": "~2.5.4"
  },
  "readme": "HTML Webpack Plugin\n===================\n\nThis is a [webpack](http://webpack.github.io/) plugin that simplifies creation of HTML files to serve your\nwebpack bundles. This is especially useful for webpack bundles that include\na hash in the filename which changes every compilation. You can either let the plugin generate an HTML file for you or supply\nyour own template (using [blueimp templates](https://github.com/blueimp/JavaScript-Templates)).\n\nInstallation\n------------\nInstall the plugin with npm:\n```shell\n$ npm install html-webpack-plugin --save-dev\n```\n\n\nBasic Usage\n-----------\n\nThe plugin will generate an HTML5 file for you that includes all your webpack\nbundles in the body using `script` tags. Just add the plugin to your webpack\nconfig as follows:\n\n```javascript\nvar HtmlWebpackPlugin = require('html-webpack-plugin')\nvar webpackConfig = {\n  entry: 'index.js',\n  output: {\n    path: 'dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [new HtmlWebpackPlugin()]\n}\n```\n\nThis will generate a file `dist/index.html` containing the following:\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\"/>\n    <title>Webpack App</title>\n  </head>\n  <body>\n    <script src=\"index_bundle.js\"></script>\n  </body>\n</html>\n```\n\nIf you have multiple webpack entry points, they will all be included with `script`\ntags in the generated HTML.\n\n\nConfiguration\n-------------\nYou can pass a hash of configuration options to `HtmlWebpackPlugin`.\nAllowed values are as follows:\n\n- `title`: The title to use for the generated HTML document.\n- `filename`: The file to write the HTML to. Defaults to `index.html`.\n   You can specify a subdirectory here too (eg: `assets/admin.html`).\n\nHere's an example webpack config illustrating how to use these options:\n```javascript\n{\n  entry: 'index.js',\n  output: {\n    path: 'dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      title: 'My App',\n      filename 'assets/admin.html'\n    })\n  ]\n}\n```\n\nGenerating Multiple HTML Files\n------------------------------\nTo generate more than one HTML file, declare the plugin more than\nonce in your plugins array:\n```javascript\n{\n  entry: 'index.js',\n  output: {\n    path: 'dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin(), // Generates default index.html\n    new HtmlWebpackPlugin({  // Also generate a test.html\n      filename: 'test.html',\n      template: 'src/assets/test.html'\n    })\n  ]\n}\n```\n\nWriting Your Own Templates\n--------------------------\nIf the default generated HTML doesn't meet your needs you can supply\nyour own [blueimp template](https://github.com/blueimp/JavaScript-Templates).\nThe [default template](https://github.com/ampedandwired/html-webpack-plugin/blob/master/default_index.html)\nis a good starting point for writing your own.\n\nLet's say for example you wanted to put a webpack bundle into the head of your\nHTML as well as the body. Your template might look like this:\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\"/>\n    <title>My App</title>\n    <script src=\"{%=o.htmlWebpackPlugin.assets.head%}\"></script>\n  </head>\n  <body>\n    <script src=\"{%=o.htmlWebpackPlugin.assets.main%}\"></script>\n  </body>\n</html>\n```\n\nTo use this template, configure the plugin like this:\n```javascript\n{\n  entry: 'index.js',\n  output: {\n    path: 'dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      template: 'src/assets/my_template.html'\n    })\n  ]\n}\n```\n\nAlternatively, if you already have your template's content in a String, you\ncan pass it to the plugin using the `templateContent` option:\n```javascript\nplugins: [\n  new HtmlWebpackPlugin({\n    templateContent: templateContentString\n  })\n]\n```\n\nNote the plugin will throw an error if you specify both `template` _and_\n`templateContent`.\n\nThe `o` variable in the template is the data that is passed in when the\ntemplate is rendered. This variable has the following attributes:\n- `htmlWebpackPlugin`: data specific to this plugin\n  - `htmlWebpackPlugin.assets`: a massaged representation of the\n    `assetsByChunkName` attribute of webpack's [stats](https://github.com/webpack/docs/wiki/node.js-api#stats)\n    object. It contains a mapping from entry point name to the bundle filename, eg:\n    ```json\n    \"htmlWebpackPlugin\": {\n      \"assets\": {\n        \"head\": \"assets/head_bundle.js\",\n        \"main\": \"assets/main_bundle.js\"\n      }\n    }\n    ```\n    If you've set a publicPath in your webpack config this will be reflected\n    correctly in this assets hash.\n\n  - `htmlWebpackPlugin.options`: the options hash that was passed to\n     the plugin. In addition to the options actually used by this plugin,\n     you can use this hash to pass arbitrary data through to your template.\n\n- `webpack`: the webpack [stats](https://github.com/webpack/docs/wiki/node.js-api#stats)\n  object. Note that this is the stats object as it was at the time the HTML template\n  was emitted and as such may not have the full set of stats that are available\n  after the wepback run is complete.\n",
  "readmeFilename": "README.md",
  "gitHead": "209a1d1c5936013ff34df56e7cab8d4c0a4f6770",
  "_id": "html-webpack-plugin@1.1.0",
  "_shasum": "b2936fb3e7065490d034553d6e40990d03a282ed",
  "_from": "html-webpack-plugin@*"
}
